stages:
  - setup
  - test
  - deploy

setup:
  stage: setup
  script:
    - |
      cd ${CI_PROJECT_DIR}
      # Stops script on failure
      set -e 
      # Remove all old running container
      sudo wex docker/stopAll
      # Create env file
      echo "APP_ENV=dev" > ".wex/.env"
      # Start container
      wex app/start
      # Check setup complete
      docker inspect wex_dev_dev
  artifacts:
    paths:
      - .wex/.env

test:
  stage: test
  script:
    - docker exec wex_dev_dev /bin/bash -c ". /opt/wex/cli/wex test; exit $?"

  needs:
    - setup

deploy:
  stage: deploy
  needs:
    - test
  script:
    - BUILD_VERSION=$(cat version.txt)
    # Stop running container
    - docker stop wex_build 2>/dev/null && docker rm wex_build 2>/dev/null || true
    # Create or empty temp build folder
    - mkdir -p /home/gitlab-runner/builds/wex && rm -rf /home/gitlab-runner/builds/wex/* /home/gitlab-runner/builds/wex/.[!.]* || true
    # Create a copy of current git repo
    - cp -r .git /home/gitlab-runner/builds/wex
    # Go to build folder
    - cd /home/gitlab-runner/builds/wex
    # Checkout build branch
    - git fetch && git checkout build
    - git checkout .wex/*
    - git clean -fd
    - git reset --hard origin/build
    # Create link to source
    - ln -s ${CI_PROJECT_DIR} source
    # Run container
    - docker compose -f .wex/docker/docker-compose.ci.yml --env-file .wex/docker/.ci.env up -d
    # Run build
    - docker exec wex_build /bin/bash -c "sudo python3 /var/www/script/build.py -n wex -gid ${CI_PROJECT_ID} -gtk '${WEX_BUILD_TOKEN}' -v '${BUILD_VERSION}'"
    # Ask apt repo to publish release
    - curl "http://wexample.com:4242/webhook/wex-apt-repo/publish?p=${CI_PROJECT_ID}&v=${BUILD_VERSION}"
