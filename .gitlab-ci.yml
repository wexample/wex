stages:
  - test

.test_cleanup:
  script:
    - docker -H "${DOCKER_HOST:-unix:///var/run/docker.sock}" ps -q --filter name=test_app_ | xargs -r -I {} docker -H "${DOCKER_HOST:-unix:///var/run/docker.sock}" rm -f {}
    - docker -H "${DOCKER_HOST:-unix:///var/run/docker.sock}" ps -q --filter name=wex_proxy_test_ | xargs -r -I {} docker -H "${DOCKER_HOST:-unix:///var/run/docker.sock}" rm -f {}
    - rm -rf /var/www/test
    - rm -rf /var/www/test_*

.test_rescue:
  script:
    - rm -rf /opt/wex
    - cp -r . /opt/wex
    - bash /opt/wex/cli/install

test:
  stage: test
  image: gitlab-docker.wexample.com/wexample/wex/rc:latest
  services:
    - name: docker:dind
      alias: docker
      command: ["--tls=false"]
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  before_script:
    # Attendre que le daemon Docker (dind) soit prêt si DOCKER_HOST est défini
    - |
      if [ -n "${DOCKER_HOST}" ]; then
        echo "Waiting for Docker daemon at ${DOCKER_HOST}..."
        for i in {1..60}; do
          docker -H "${DOCKER_HOST}" info >/dev/null 2>&1 && break
          sleep 1
        done
        # Montrer l'état si échec
        docker -H "${DOCKER_HOST}" info || true
      fi
  script:
    - !reference [.test_cleanup, script]
    - !reference [.test_rescue, script]
    - sudo wex app::env/set --app-dir /opt/wex/ -e test
    - sudo wex rebuild
    - sudo -u owner sudo wex test -vvv
    - !reference [.test_cleanup, script]