stages:
  - test

variables:
  MAIN_BRANCH_NAME: "master"

include:
  - remote: 'https://gitlab.wexample.com/wexample-public/ci-cd/-/raw/main/.gitlab-ci.build-image.yml'
  - remote: 'https://gitlab.wexample.com/wexample-public/ci-cd/-/raw/main/.gitlab-ci.checkup.yml'

# Rules when branch has been merged.
.merge_branch_rules: &merge-branch-master-rules
  - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $MAIN_BRANCH_NAME'

.merge_to_master:
  resource_group: main_pipeline
  rules:
    - *merge-branch-master-rules

.on_master:
  resource_group: main_pipeline
  only:
    - master

.build_live_image:
  extends: [ .merge_to_master, .globals, .docker_login, .build_image_app ]
  script:
    - !reference [ .docker_login, script ]
    - !reference [ .build_image_app, script ]

.test_cleanup:
  script:
    - docker ps -q --filter name=test_app_ | xargs -r docker rm -f
    - docker ps -q --filter name=wex_proxy_test_ | xargs -r docker rm -f
    - rm -rf /var/www/test
    - rm -rf /var/www/test_*

# Use this into test job to use last repo,
# instead of rebuilding "rc" image.
.test_rescue:
  script:
    - rm -rf /opt/wex
    - cp -r . /opt/wex
    - bash /opt/wex/cli/install

test:
  stage: test
  image: gitlab-docker.wexample.com/wexample/wex/rc:latest
  extends: [ .merge_to_master, .test_cleanup, .test_rescue, .docker_login ]
#  variables:
#    GIT_STRATEGY: none
  script:
    - echo $CI_PROJECT_DIR
#    - !reference [ .test_cleanup, script ]
#    - !reference [ .docker_login, script ]
#    - !reference [ .test_rescue, script ]
#    # Change environment
#    - sudo wex app::env/set --app-dir /opt/wex/ -e test
#    - sudo wex rebuild
#    # Run tests, as "owner", with sudo.
#    - sudo -u owner sudo wex test -vvv
#    - !reference [.test_cleanup, script]