stages:
  - check_version
  - setup
  - test
  - deploy

check_version:
  stage: check_version
  only:
    - master
  script: |
    LAST_COMMIT_MSG=$(git log --format=%B -n 1 $CI_COMMIT_SHA)
    echo "Commit message: \"${LAST_COMMIT_MSG}\""
    [[ "${LAST_COMMIT_MSG}" =~ ^New\ version$ ]] && export VERSION_CHECK_PASSED=true || exit 0;
    echo "New version : ${VERSION_CHECK_PASSED:-false}"
    echo "${VERSION_CHECK_PASSED:-false}" > VERSION_CHECK_PASSED.txt
  artifacts:
    paths:
      - VERSION_CHECK_PASSED.txt

setup:
  stage: setup
  only:
    - master
  variables:
    # To avoid 'tput: unknown terminal "unknown"' in gitlab-ci console log
    TERM: dumb
  script: |
    echo "New version : ${VERSION_CHECK_PASSED:-false}"
    if [[ -n "${VERSION_CHECK_PASSED}" ]]; then
      # Remove old version.
      wex && [[ "$(wex hi)" = "hi!" ]] && sudo wex default::core/uninstall || true
      # Clone from local build folder.
      sudo git clone "${CI_PROJECT_DIR}/.git/" /opt/wex && sudo bash /opt/wex/install
    fi
  needs:
    - job: check_version
      artifacts: true

test:
  stage: test
  only:
    - master
  variables:
    # To avoid 'tput: unknown terminal "unknown"' in gitlab-ci console log
    TERM: dumb
  script: |
      if [[ -f "VERSION_CHECK_PASSED.txt" && "$(cat VERSION_CHECK_PASSED.txt)" == "true" ]]; then sudo wex test; fi
  needs:
    - job: setup
      artifacts: true

deploy:
  stage: deploy
  only:
    - master
  script: |
      if [[ -f "VERSION_CHECK_PASSED.txt" && "$(cat VERSION_CHECK_PASSED.txt)" == "true" ]]; then sudo wex core/push -o=github; fi
  needs:
    - job: test
      artifacts: true
