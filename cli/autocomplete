#!/usr/bin/env bash

autocomplete() {
  # Get the current word being completed
  local CURRENT=${COMP_WORDS[${COMP_CWORD}]}
  # Get the search query, everything after the first word
  local SEARCH=("${COMP_WORDS[*]:1}")
  # Set the current position of the cursor
  local CURSOR=$((COMP_CWORD - 1))
  # Activate for dev
  # local AUTOCOMPLETE_DEBUG=true

  # Get autocomplete suggestions
  local SUGGESTIONS=""
  SUGGESTIONS=($(wex core::autocomplete/suggest -c "${CURSOR}" -s "${SEARCH[*]}"))

  # If current position is right after "::",
  # we need to empty var to allow suggestions
  if [ "${CURRENT}" == "::" ]; then
    CURRENT=""
  fi

  # Command type : service
  if [[ ${SEARCH[0]} =~ ^@ ]]; then
    # The @ char, which is user for services, is used as a word separator in compgen
    if [[ "${CURRENT}" != "@" ]] && [[ "${CURSOR}" == "1" ]]; then
      CURRENT="@${CURRENT}"
    fi
  fi

  # Generate autocomplete suggestions using compgen
  COMPREPLY=($(compgen -W "${SUGGESTIONS[*]}" -- ${CURRENT}))

  local ARGS_CURSOR=0
  # There is only one suggestion, so we search
  # if we can add a final space to enter to arguments section
  # Each type of command may have a different position of arguments section
  if [[ "${COMPREPLY}" != "" ]] && ! [[ ${COMPREPLY[*]} =~ [\ ] ]]; then
    if [[ ${COMPREPLY[*]} =~ ^@ ]]; then
      # Command type : service
      ARGS_CURSOR=3
    elif [[ ${COMPREPLY[*]} =~ ^'.' ]]; then
      # Command type : app
      ARGS_CURSOR=1
    elif [[ ${COMPREPLY[*]} =~ ^'~' ]]; then
      # Command type : 'user'
      ARGS_CURSOR=1
    elif [[ " ${COMPREPLY[*]}" = *"::"* ]] || [[ " ${COMPREPLY[*]}" = *"/"* ]];then
      # Ignore if completion terminates with a ":", as we don't want final space in this case.
      if [[ " ${COMPREPLY[*]}" != *":" ]];then
        # Command type : addon
        ARGS_CURSOR=3
      fi
    else
      local TRIMMED=$(echo  ${COMPREPLY[*]} | xargs)
      if [[ "${TRIMMED}" =~ ^[a-z\-]+$ ]];then
        # Command type : core
        ARGS_CURSOR=1
      fi
    fi

    # We know the minimum cursor number
    if [[ "${ARGS_CURSOR}" -gt 0 ]]; then
      COMPREPLY+=" "
    fi
  fi

  if [[ "${AUTOCOMPLETE_DEBUG}" = "true" ]];then
    echo "____________"
    echo "CURSOR       : ${CURSOR}"
    echo "ARGS_CURSOR  : ${ARGS_CURSOR}"
    echo "SUGGESTIONS  : ${SUGGESTIONS[*]}"
    echo "CURRENT      : ${CURRENT}"
    echo "COMPREPLY    : ${COMPREPLY[*]}"
  fi
}

autocomplete
