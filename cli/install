#!/usr/bin/env bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Find the current file directory, supporting symlinks
WEX_DIR_CLI="$(realpath "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")")/"

# Source initialization scripts
. "${WEX_DIR_CLI}/_init.sh"
. "${WEX_DIR_CLI}/_init_sudo.sh"

# Set WEX_DIR_ROOT
WEX_DIR_ROOT=$(realpath "${WEX_DIR_CLI}../")/

echo "Checking Python requirements..."

# Function to check if a command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Install pip if not installed
if ! command_exists pip; then
    echo "Installing pip..."
    sudo apt-get update
    sudo apt-get -y install python3-pip python3-venv
fi

# Install procps if not installed
if ! command_exists ps; then
    echo "Installing procps..."
    sudo apt-get update
    sudo apt-get -y install procps
fi

# Install sshpass if not installed
if ! command_exists sshpass; then
    echo "Installing sshpass..."
    sudo apt-get update
    sudo apt-get -y install sshpass
fi

# Create and activate virtual environment
VENV_PATH="${WEX_DIR_ROOT}.wex/python/venv"
python3 -m venv "$VENV_PATH" --clear
# Activate virtual environment
. "${VENV_PATH}/bin/activate"

echo "Installing Python requirements..."
pip install -r "${WEX_DIR_ROOT}requirements.txt"

echo "Cleanup..."
sudo rm -f "${WEX_DIR_ROOT}tmp/registry.yml"

echo "Configuring..."
WEX_ENV_PATH="${WEX_DIR_ROOT}.wex/.env"
if [ ! -f "${WEX_ENV_PATH}" ]; then
    echo "APP_ENV=prod" > "${WEX_ENV_PATH}"
fi

echo "Installing core..."
bash "${WEX_DIR_CLI}wex" core::core/install

echo "Reload bashrc changes..."
# shellcheck disable=SC1090
. ~/.bashrc
